name: Build Agent V3 image

on:
  push:
    branches:
      agent-v3

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  build:
    permissions:
      contents: read # for docker/build-push-action to read repo content
      id-token: write # for login to GCP
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Output Variables
        id: vars
        run: |
          ./.github/scripts/variables.sh go_code_md5 >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

      - name: Setup Golang Environment
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version-file: go.mod

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@6fc4af4b145ae7821d527454aa9bd537d1f2dc5f # v2.1.7
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCR_WORKLOAD_IDENTITY }}
          service_account: ${{ secrets.GCR_SERVICE_ACCOUNT }}

      - name: Login to GCR
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Setup plus credentials
        run: |
          printf '%s\n' "${CERT}" > nginx-repo.crt
          printf '%s\n' "${KEY}" > nginx-repo.key
        env:
          CERT: ${{ secrets.NGINX_AP_CRT }}
          KEY: ${{ secrets.NGINX_AP_KEY }}

      - name: Fetch Cached Binary Artifacts
        id: binary-cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ${{ github.workspace }}/dist
          key: nginx-ingress-${{ steps.vars.outputs.go_code_md5 }}

      - name: Build Image
        run: |
          make agentv3
        env:
          REGISTRY: gcr.io/f5-gcs-7899-ptg-ingrss-ctlr/dev
          PREFIX: pdabel
          TAG: agentv3
          PLUS_REPO: pkgs-test.nginx.com
          TARGET: goreleaser

      - name: Push image
        run:
          docker push ${REGISTRY}/${PREFIX}:${TAG}
        env:
          REGISTRY: gcr.io/f5-gcs-7899-ptg-ingrss-ctlr/dev
          PREFIX: pdabel
          TAG: agentv3
