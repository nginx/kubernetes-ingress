name: Build UBI c-ares Dependency

on:
  push:
    branches:
      - main
    paths:
      - build/dependencies/Dockerfile.ubi8
      - build/dependencies/Dockerfile.ubi9
      - .github/workflows/build-ubi-dependency.yml
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/nginx/dependencies/nginx-ubi

concurrency:
  group: ${{ github.ref_name }}-ubi-build
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-binaries:
    name: Build Binary Container Image
    runs-on: ubuntu-22.04
    permissions:
      packages: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        tag: ["ubi8", "ubi9"]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
        with:
          platforms: arm64

      - name: Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: |
            name=${{ env.IMAGE_NAME }},enable=true
          tags: |
            type=raw,value=${{ matrix.tag }},enable=true
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          file: ./build/dependencies/Dockerfile.${{ matrix.tag }}
          context: "."
          pull: true
          push: true
          platforms: "linux/amd64,linux/arm64"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          cache-from: type=gha,scope=nginx-${{ matrix.tag }}
          cache-to: type=gha,scope=nginx-${{ matrix.tag }},mode=max
          target: final
          sbom: false
          provenance: mode=max
